/*For an array a of integers let's denote its maximal element as max(a), and minimal as min(a). We will call an array a of k integers interesting if max(a)−min(a)≥k. For example, array [1,3,4,3] isn't interesting as max(a)−min(a)=4−1=3<4 while array [7,3,0,4,3] is as max(a)−min(a)=7−0=7≥5.

You are given an array a of n integers. Find some interesting nonempty subarray of a, or tell that it doesn't exist.

An array b is a subarray of an array a if b can be obtained from a by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. In particular, an array is a subarray of itself.

Input
The first line contains integer number t (1≤t≤10000). Then t test cases follow.

The first line of each test case contains a single integer n (2≤n≤2⋅105) — the length of the array.

The second line of each test case contains n integers a1,a2,…,an (0≤ai≤109) — the elements of the array.

It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.

Output
For each test case, output "NO" in a separate line if there is no interesting nonempty subarray in a.

Otherwise, output "YES" in a separate line. In the next line, output two integers l and r (1≤l≤r≤n) — bounds of the chosen subarray. If there are multiple answers, print any.

You can print each letter in any case (upper or lower).*/

#include <bits/stdc++.h>
using namespace std;
#define  min3(a,b,c)            min(a,min(b,c))
 
 
 
int solve() {
 
    int n;
    cin>>n;
    int ar[200006];
    for(int i=1;i<=n;i++)
    {
        cin>>ar[i];
    }
    for(int i=1;i<=n;i++)
    {
        if(i!=n)
        {
            if(abs(ar[i]-ar[i+1])>1)
            {
                cout<<"YES"<<endl;
                cout<<i<<" "<<i+1<<endl;
                return 0;
            }
        }
    }
    cout<<"NO"<<endl;
    return 0;
}
 
 
 
 
int main()
{
    //Input//freopen("input.txt", "r", stdin);
    //Output//freopen("output.txt", "w", stdout)
 
    int test = 1, tc = 0;
    scanf("%d", &test);
   // (void)getchar();
    //cin >> test;
    while (test--) {
        //printf("Case %d: ", ++tc);
        solve();
    }
 
}
