/*You are given three integers a≤b≤c.

In one move, you can add +1 or −1 to any of these integers (i.e. increase or decrease any number by one). You can perform such operation any (possibly, zero) number of times, you can even perform this operation several times with one number. Note that you cannot make non-positive numbers using such operations.

You have to perform the minimum number of such operations in order to obtain three integers A≤B≤C such that B is divisible by A and C is divisible by B.

You have to answer t independent test cases.

Input
The first line of the input contains one integer t (1≤t≤100) — the number of test cases.

The next t lines describe test cases. Each test case is given on a separate line as three space-separated integers a,b and c (1≤a≤b≤c≤104).

Output
For each test case, print the answer. In the first line print res — the minimum number of operations you have to perform to obtain three integers A≤B≤C such that B is divisible by A and C is divisible by B. On the second line print any suitable triple A,B and C.

Example
inputCopy
8
1 2 3
123 321 456
5 10 15
15 18 21
100 100 101
1 22 29
3 19 38
6 30 46
outputCopy
1
1 1 3
102
114 228 456
4
4 8 16
6
18 18 18
1
100 100 100
7
1 22 22
2
1 19 38
8
6 24 48
*/

/*
Author: Fuadul Hasan(fuadul202@gmail.com)
BSMRSTU,Gopalganj
*/
#include <set>
#include <map>
#include <list>
#include <queue>
#include <ctime>
#include <deque>
#include <stack>
#include <cmath>
#include <queue>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <chrono>
#include <random>
#include <cassert>
#include <complex>
#include <cstdlib>
#include <numeric>
#include <sstream>
#include <fstream>
#include <climits>
#include <stdio.h>
#include <cstring>
#include <iterator>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
//#include<bits/stdc++.h>
using namespace std;
 
int         cinn()              {int x; scanf("%d", &x); return x;}
long long   cinl()              {long long x; scanf("%lld", &x); return x;}

#define  F                      first
#define  S                      second
#define  cinn					cinn()
#define  arr(a,n)				a,a+n
#define  gcd(a,b)               __gcd(a,b)
#define  lcm(a,b)               (a*b)/gcd(a,b)
#define  PI                     acos(-1.0)
#define  pb                     push_back
#define  ll                     long long int
#define  nl                     printf("\n");
#define  no                     printf("No");
#define  yes                    printf("Yes");
#define  sqr(x)					((x)*(x))
#define  min3(a,b,c)            min(a,min(b,c))
#define  min4(a,b,c,d)          min(d,min(a,min(b,c)))
#define  max3(a,b,c)            max(a,max(b,c))
#define  max4(a,b,c,d)          max(d,max(a,max(b,c)))
#define  happy					cin.tie(0);
#define  coding					ios::sync_with_stdio(false);
#define  vi                     std::vector<int>
#define  vll                    std::vector<ll>
#define  mpsi                   std::map<string, int>
#define  rep(i,a,b) 			for(int i=a;i<=b;i++)
#define  ren(i,a,b)		 		for(int i=a;i>=b;i--)
#define  all(n) 				n.begin(),n.end()


typedef  	pair<int,int> ii;
typedef 	std::vector<ii> vii;
/*
	scanf("%[^\n]%*c", str);
*/
/*..........error........*/
#define error(args...) {vector<string>_v=split(#args,',');err(_v.begin(),args);cout<<endl;}
vector<string> split(const string &s,char c) {vector<string>v;stringstream ss(s);string x;
while(getline(ss,x,c))v.emplace_back(x);return move(v);}void err(vector<string>::iterator it) {}
template<typename T,typename... Args>void err(vector<string>::iterator it,T a,Args...args) {
cout<<it->substr((*it)[0]==' ',it->length())<< " = " << a << " ";err(++it,args...);}
/*.........error...........*/
 
const int mod           = 1e9 + 7;
const int inf           = (int)2e9 + 5;
const ll  Inf           = (ll)1e18 + 5;
const int N             = 1e7 + 5;
const int nn           = 3e5 + 5;

int siv[2000];
int siv1[200];


int solve()
{
	//happy coding
	
	int a=cinn,b=cinn,c=cinn;
	int a1,b1,c1;
	int sum = mod;
	for(int i=1;i<=20005;i++){
		for(int j=i;j<=20005;j+=i){
			for(int k=j;k<=20005;k+=j){
				if(abs(a-i)+abs(b-j)+abs(c-k)<=sum){
					sum = abs(a-i)+abs(b-j)+abs(c-k);
					a1=i;b1=j;c1=k;
				}
			}
		}
	}
	cout<<sum;nl;
	cout<<a1<<" "<<b1<<" "<<c1<<endl;

	//error();
	return 0;
}
 
int main()
{
    int test = 1, tc = 0;
    scanf("%d", &test);//(void)getchar();
    while (test--)solve();return 0;
}
